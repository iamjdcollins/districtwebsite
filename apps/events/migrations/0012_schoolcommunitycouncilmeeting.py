# Generated by Django 2.0 on 2018-09-20 15:28

import apps.common.functions
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    dependencies = [
        ('objects', '0024_auto_20180918_1055'),
        ('events', '0011_auto_20180918_1055'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolCommunityCouncilMeeting',
            fields=[
                ('title', models.CharField(max_length=200)),
                ('startdate', models.DateTimeField(default=apps.common.functions.next_tuesday_sixthrity, verbose_name='Start Date and Time')),
                ('originaldate', models.DateTimeField(verbose_name='Original Start Date and Time')),
                ('originalinstance', models.PositiveIntegerField(blank=True, null=True)),
                ('schoolyear', models.CharField(max_length=7)),
                ('yearend', models.CharField(max_length=4)),
                ('cancelled', models.BooleanField(default=False)),
                ('event_schoolcommunitycouncilmeeting_node', models.OneToOneField(db_column='event_schoolcommunitycouncilmeeting_node', editable=False, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='objects.Event')),
                ('related_node', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events_schoolcommunitycouncilmeeting_node', to='objects.Node')),
            ],
            options={
                'verbose_name': 'School Community Council Meeting',
                'verbose_name_plural': 'School Community Council Meetings',
                'permissions': (('trash_schoolcommunitycouncilmeeting', 'Can soft delete school community council meeting'), ('restore_schoolcommunitycouncilmeeting', 'Can restore school community council meeting')),
                'default_manager_name': 'base_manager',
                'db_table': 'events_schoolcommunitycouncilmeeting',
                'get_latest_by': 'update_date',
            },
            bases=('objects.event',),
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
