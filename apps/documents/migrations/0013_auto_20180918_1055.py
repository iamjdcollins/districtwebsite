# Generated by Django 2.0 on 2018-09-18 16:55

from django.db import migrations
import django.db.models.manager


class Migration(migrations.Migration):

    dependencies = [
        ('documents', '0012_auto_20180830_1523'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='administrativeprocedure',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'permissions': (('trash_administrativeprocedure', 'Can soft delete administrative procedure'), ('restore_administrativeprocedure', 'Can restore administrative procedure')), 'verbose_name': 'Administrative Procedure', 'verbose_name_plural': 'Administrative Procedures'},
        ),
        migrations.AlterModelOptions(
            name='boardmeetingagenda',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'permissions': (('trash_boardmeetingagenda', 'Can soft delete board meeting agenda'), ('restore_boardmeetingagenda', 'Can restore board meeting agenda')), 'verbose_name': 'Board Meeting Agenda', 'verbose_name_plural': 'Board Meeting Agendas'},
        ),
        migrations.AlterModelOptions(
            name='boardmeetingagendaitem',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'permissions': (('trash_boardmeetingagendaitem', 'Can soft delete board meeting agenda item'), ('restore_boardmeetingagendaitem', 'Can restore board meeting agenda item')), 'verbose_name': 'Board Meeting Agenda Item', 'verbose_name_plural': 'Board Meeting Agenda Items'},
        ),
        migrations.AlterModelOptions(
            name='boardmeetingaudio',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'permissions': (('trash_boardmeetingaudio', 'Can soft delete board meeting audio'), ('restore_boardmeetingaudio', 'Can restore board meeting audio')), 'verbose_name': 'Board Meeting Audio', 'verbose_name_plural': 'Board Meeting Audio'},
        ),
        migrations.AlterModelOptions(
            name='boardmeetingexhibit',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'permissions': (('trash_boardmeetingexhibit', 'Can soft delete board meeting exhibit'), ('restore_boardmeetingexhibit', 'Can restore board meeting exhibit')), 'verbose_name': 'Board Meeting Exhibit', 'verbose_name_plural': 'Board Meeting Exhibits'},
        ),
        migrations.AlterModelOptions(
            name='boardmeetingminutes',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'permissions': (('trash_boardmeetingminutes', 'Can soft delete board meeting minutes'), ('restore_boardmeetingminutes', 'Can restore board meeting minutes')), 'verbose_name': 'Board Meeting Minutes', 'verbose_name_plural': 'Board Meeting Minutes'},
        ),
        migrations.AlterModelOptions(
            name='boardmeetingvideo',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'permissions': (('trash_boardmeetingvideo', 'Can soft delete board meeting video'), ('restore_boardmeetingvideo', 'Can restore board meeting video')), 'verbose_name': 'Board Meeting Video', 'verbose_name_plural': 'Board Meeting Videos'},
        ),
        migrations.AlterModelOptions(
            name='boardpolicy',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'permissions': (('trash_boardpolicy', 'Can soft delete board policy'), ('restore_boardpolicy', 'Can restore board policy')), 'verbose_name': 'Board Policy', 'verbose_name_plural': 'Board Policies'},
        ),
        migrations.AlterModelOptions(
            name='disclosuredocument',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'ordering': ['inline_order'], 'permissions': (('trash_document', 'Can soft delete Disclosure Document'), ('restore_document', 'Can restore Disclosure Document')), 'verbose_name': 'Disclosure Document', 'verbose_name_plural': 'Disclosure Documents'},
        ),
        migrations.AlterModelOptions(
            name='document',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'ordering': ['inline_order'], 'permissions': (('trash_document', 'Can soft delete document'), ('restore_document', 'Can restore document')), 'verbose_name': 'Document', 'verbose_name_plural': 'Documents'},
        ),
        migrations.AlterModelOptions(
            name='policy',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'permissions': (('trash_policy', 'Can soft delete policy'), ('restore_policy', 'Can restore policy')), 'verbose_name': 'Policy', 'verbose_name_plural': 'Policies'},
        ),
        migrations.AlterModelOptions(
            name='supportingdocument',
            options={'default_manager_name': 'base_manager', 'get_latest_by': 'update_date', 'permissions': (('trash_supportingdocument', 'Can soft delete supporting document'), ('restore_supportingdocument', 'Can restore supporting document')), 'verbose_name': 'Supporting Document', 'verbose_name_plural': 'Supporting Documents'},
        ),
        migrations.AlterModelManagers(
            name='administrativeprocedure',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='boardmeetingagenda',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='boardmeetingagendaitem',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='boardmeetingaudio',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='boardmeetingexhibit',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='boardmeetingminutes',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='boardmeetingvideo',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='boardpolicy',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='disclosuredocument',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='document',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='policy',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='supportingdocument',
            managers=[
                ('base_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
